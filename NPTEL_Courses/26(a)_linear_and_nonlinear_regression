Note: 'lsqnonlin' requires Optimization Toolbox.

clear all; close all; clc;
%%  For solution using lsqnonlin
phi0 = [10;10];
phi = lsqnonlin(@(p) lsqFun(p), phi0);

% Linear least squares
t = [10 20 30 40 50]';
r = [0.29 0.22 0.18 0.15 0.13]';

% Linear Transformation
y = 1./r;
x = t;
n = length(t);
X = [ones(n,1), x];
phiLin = inv(X'*X)*X'*y;

% obtain orignal parameters
a = 1/phiLin(2);
b = phiLin(1)*a;

function fErr = lsqFun(phi)
% Data
t = [10 20 30 40 50]';
r = [0.29 0.22 0.18 0.15 0.13]';

% get parameters
a = phi(1);
b = phi(2);

% Compute the error
rModel = a/(b+t);
fErr = r - rModel

end
