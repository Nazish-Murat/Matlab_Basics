
%% RK_2  (one dependent)

f = input('Enter your function: '); %    %@(t,y) -20*y+ 7*exp(-0.5*t)
t0 = input('Enter initial value of independent variable: ');  %0
y0 = input('Enter initial value of 1st dependent variable: ');   %5
h = input('Enter step size: ');   %0.5
tn = input('Enter point at which you want to evaluate solution: ')  %0.2
n = (tn-t0)/h;
t(1) = t0; y(1) = y0;
for i=1:n
    t(i+1) = t0 + i*h;
    k1 = h*f(t(i),y(i));
    k2 = h*f(t(i+1),y(i)+k1);
    y(i+1) = y(i) + (1/2)* (k1+k2);
    fprintf('y(%.2f)=%.4f\n',t(i+1),y(i+1))
end

%% RK_2 (two independent variable)
f = input('Enter your 1st function: '); %right side of 1st ode    %@(t,y,z) z 
g = input('Enter your 2nd function: ');  %right side of 2nd ode    %@(t,y,z) 0.05*z - 0.15*y
t0 = input('Enter initial value of independent variable: ');  %0
y0 = input('Enter initial value of 1st dependent variable: ');   %1
z0 = input('Enter initial value of 2nd dependent variable: ');  %0
h = input('Enter step size: ');   %0.5
tn = input('Enter point at which you want to evaluate solution: ')  %1
n = (tn-t0)/h;
t(1) = t0; y(1) = y0; z(1) = z0;
for i=1:n
    t(i+1) = t0 + i*h;
    k1 = h*f(t(i),y(i),z(i));
    m1 = h*g(t(i),y(i),z(i));
    k2 = h*f(t(i+1),y(i)+k1,z(i)+m1);
    m2 = h*g(t(i+1),y(i)+k1,z(i)+m1);
    y(i+1) = y(i) + (1/2)* (k1+k2);
    z(i+1) = z(i) + (1/2)* (m1+m2);
    fprintf('y(%.2f)=%.4f\n',t(i+1),y(i+1))
    fprintf('z(%.2f)=%.4f\n',t(i+1),z(i+1))   
end

%% RK_4  (one dependent)

f = input('Enter your function: '); %    %@(t,y) -20*y+ 7*exp(-0.5*t)
t0 = input('Enter initial value of independent variable: ');  %0
y0 = input('Enter initial value of 1st dependent variable: ');   %5
h = input('Enter step size: ');   %0.5
tn = input('Enter point at which you want to evaluate solution: ')  %0.2
n = (tn-t0)/h;
t(1) = t0; y(1) = y0;
for i=1:n
    t(i+1) = t0 + i*h;
    k1 = h*f(t(i),y(i));
    k2 = h*f(t(i)+(h/2),y(i)+(k1/2));
    k3 = h*f(t(i)+(h/2),y(i)+(k2/2));
    k4 = h*f(t(i)+h,y(i)+k3);
    y(i+1) = y(i) + (1/6)* (k1+k2+2*k3+k4);
    fprintf('y(%.2f)=%.4f\n',t(i+1),y(i+1))
end

%% RK_4 (two independent variable)
f = input('Enter your 1st function: '); %right side of 1st ode    %@(t,y,z) z 
g = input('Enter your 2nd function: ');  %right side of 2nd ode    %@(t,y,z) 0.05*z - 0.15*y
t0 = input('Enter initial value of independent variable: ');  %0
y0 = input('Enter initial value of 1st dependent variable: ');   %1
z0 = input('Enter initial value of 2nd dependent variable: ');  %0
h = input('Enter step size: ');   %0.5
tn = input('Enter point at which you want to evaluate solution: ')  %1
n = (tn-t0)/h;
t(1) = t0; y(1) = y0; z(1) = z0;
for i=1:n
    t(i+1) = t0 + i*h;
    k1 = h*f(t(i),y(i),z(i));
    m1 = h*g(t(i),y(i),z(i));
    
    k2 = h*f(t(i)+(h/2),y(i)+(k1/2),z(i)+(m1/2));
    m2 = h*g(t(i)+(h/2),y(i)+(k1/2),z(i)+(m1/2));
    
    k3 = h*f(t(i)+(h/2),y(i)+(k2/2),z(i)+(m2/2));
    m3 = h*g(t(i)+(h/2),y(i)+(k2/2),z(i)+(m2/2));
      
    k4 = h*f(t(i)+h,y(i)+k3,z(i)+m3);
    m4 = h*g(t(i)+h,y(i)+k3,z(i)+m3)
 
    
    y(i+1) = y(i) + (1/6)* (k1+2*k2+2*k3+k4);
    z(i+1) = z(i) + (1/6)* (m1+2*m2+2*m3+m4);
    fprintf('y(%.2f)=%.4f\n',t(i+1),y(i+1))
    fprintf('z(%.2f)=%.4f\n',t(i+1),z(i+1))   
end


